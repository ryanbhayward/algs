# converted to python 3
# used for weighted graphs
from sys import stdin
from re import findall
def weightSum(G):
  sum = 0
  for u in G: 
    for (v,weight) in G[u]: sum += weight
  return sum

def infinity(G): return 999+weightSum(G)

def indexOfMin(L,C):
  ndx = 0
  for j in range(1,len(L)):
    if C[L[j]] < C[L[ndx]]: ndx = j
  return ndx

def showAll(G,D,P):
  print('\nprnt', end='')
  for v in sorted(G): print(P[v], end='')
  print('\nnode', end='')
  for v in sorted(G): print(v, end='')
  print('\ncost', end='')
  for v in sorted(G): print(D[v], end='')
  print('')

def showFringe(G,F,D,inf):
  print('  fringe', end='')
  for v in sorted(F):
    if D[v]!=inf:
      print(v,D[v],' ', end='')

def readWGraph():
  G = {}
  for line in stdin:
    tokens =  findall(r"[^\W\d_]+|\d+", line)
    if len(tokens)>0:
      node = tokens.pop(0)
      nbrs = []
      while len(tokens)>0: 
        nbrs.append([tokens.pop(0), int(tokens.pop(0))])
    G[node] = nbrs
  return G

def showGraph(G):
  print('{')
  for node in sorted(G):
    print('\''+node+'\':',G[node],',')
  print('}')

G = {'A': [['B',4],['C',2]],
     'B': [['C',3],['D',2],['E',3]],
     'C': [['B',1],['D',4],['E',5]],
     'D': [],
     'E': [['D',1]]
}
G2 = {'A': [['B',8],['C',8],['D',9],['E',13],['F',4],['G',11]],
      'B': [['A',8],['C',0],['D',9],['E',12],['F',1],['G',18]],
      'C': [['A',8],['B',0],['D',3],['E', 7],['F',15],['G', 6]],
      'D': [['A',9],['B',9],['C',3],['E', 1],['F',13],['G', 9]],
      'E': [['A',13],['B',12],['C',7],['D',1],['F',18],['G', 6]],
      'F': [['A',4],['B',1],['C',15],['D',13],['F',18],['G', 5]],
      'G': [['A',11],['B',18],['C',6],['D',9],['F',6],['G', 5]]
}
G3 = {'A': [],
      'B': [['A',1]]
}
G4 = {'A': [['B',24],['F',4]],
      'B': [['A',24],['C',9],['G',23],['H',18]],
      'C': [['B',9],['D',7],['H',11]],
      'D': [['C',7],['E',21],['H',14]],
      'E': [['D',21],['F',16],['G',8],['H',10]],
      'F': [['A',4],['E',16],['G',6]],
      'G': [['B',23],['E',8],['F',6],['H',5]],
      'H': [['B',18],['C',11],['D',14],['E',10],['G',5]]
}
G5 = {'A': [['B', 18], ['D', 47], ['E', 15]] ,
      'B': [['C', 13], ['E', 30], ['F', 18]] ,
      'C': [['B', 9], ['F', 16], ['G', 21]] ,
      'D': [['E', 7], ['H', 20]] ,
      'E': [['F', 29], ['H', 7], ['I', 15]] ,
      'F': [['G', 8]] ,
      'G': [['J', 7]] ,
      'H': [['D', 12], ['I', 6]] ,
      'I': [['F', 11], ['J', 29]] ,
      'J': [['F', 5]]
}
G6 = {
'A': [['B', 24], ['D', 4], ['F', 14], ['H', 11]] ,
'B': [['A', 24], ['C', 9], ['E', 18]] ,
'C': [['B', 9], ['G', 7], ['J', 17]] ,
'D': [['A', 4], ['E', 21], ['F', 7]] ,
'E': [['B', 18], ['D', 21], ['G', 16], ['I', 10]] ,
'F': [['A', 14], ['D', 7], ['H', 7], ['K', 9]] ,
'G': [['C', 7], ['E', 16], ['J', 3], ['L', 15], ['M', 8]] ,
'H': [['A', 11], ['F', 7], ['K', 12], ['Q', 25]] ,
'I': [['E', 10], ['K', 19], ['L', 7]] ,
'J': [['C', 17], ['G', 3], ['M', 13], ['S', 19]] ,
'K': [['F', 9], ['H', 12], ['I', 19], ['O', 2]] ,
'L': [['G', 15], ['I', 7], ['M', 9], ['N', 12]] ,
'M': [['G', 8], ['J', 13], ['L', 9], ['P', 14]] ,
'N': [['L', 12], ['O', 17], ['R', 6]] ,
'O': [['K', 2], ['N', 17], ['Q', 8]] ,
'P': [['M', 14], ['S', 17], ['R', 13]] ,
'Q': [['H', 25], ['O', 8], ['R', 23]] ,
'R': [['N', 6], ['P', 13], ['Q', 23], ['S', 14]] ,
'S': [['J', 19], ['P', 17], ['R', 14]] ,
}
G7 = {'A': [['B',3],['F',8]],
      'B': [['A',3],['C',4],['F',7]],
      'C': [['B',4],['D',8],['E',6],['F',5]],
      'D': [['C',8],['E',9]],
      'E': [['C',6],['D',9],['F',6]],
      'F': [['A',8],['B',7],['C',5],['E',6]]
}
G8 = {'A': [['B',20],['C',10]],
      'B': [['A',20],['Z',20]],
      'C': [['A',10],['Z',23]],
      'Z': [['B',20],['C',23]]
}
G9 = {'A': [['B',10],['D',15]],
      'B': [['A',10],['C',10]],
      'C': [['B',10],['F',21]],
      'D': [['A',15],['E',12]],
      'E': [['D',12],['G',15]],
      'F': [['C',21],['Z',8]],
      'G': [['E',15],['Z',10]],
      'Z': [['F', 8],['G',10]]
}
G355 = {'A': [['S',140],['T',118],['Z',75]],
        'B': [['F',211],['P',101]],
        'C': [['D',120],['P',138],['R',145]],
        'D': [['C',120],['M',75]],
        'F': [['B',211],['S',99]],
        'L': [['M',70],['T',111]],
        'M': [['D',75],['L',70]],
        'P': [['B',101],['C',138],['R',97]],
        'Q': [['S',151],['Z',71]],
        'R': [['C',145],['P',97],['S',80]],
        'S': [['A',140],['F',99],['Q',151],['R',80]],
        'T': [['A',118],['L',111]],
        'Z': [['A',75],['Q',71]]
}
#Gtest = readWGraph()
#print(Gtest)
#showGraph(Gtest)
